{"version":3,"file":"./bundle.js","mappings":"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","sources":["webpack://BeautyForm/./src/components/Atoms/Background/Background.ts","webpack://BeautyForm/./src/components/Atoms/Image/Image.ts","webpack://BeautyForm/./src/Constants/enums.ts","webpack://BeautyForm/./src/Constants/login-data.ts","webpack://BeautyForm/./src/components/Atoms/Button/Button.ts","webpack://BeautyForm/./src/components/Atoms/Title/Title.ts","webpack://BeautyForm/./src/components/Atoms/ValidationText/ValidationText.ts","webpack://BeautyForm/./src/components/Atoms/Label/Label.ts","webpack://BeautyForm/./src/components/Atoms/TextField/TextField.ts","webpack://BeautyForm/./src/components/Molecules/TextInfo/TextInfo.ts","webpack://BeautyForm/./src/components/Molecules/MainUserInputContainer/MainUserInputContainer.ts","webpack://BeautyForm/./src/components/Atoms/PrevPageLink/PrevPageLink.ts","webpack://BeautyForm/./src/components/Atoms/RegisterText/RegisterText.ts","webpack://BeautyForm/./src/components/Molecules/RegisterIndicator/RegisterIndicator.ts","webpack://BeautyForm/./src/Hooks/LocalStorage.ts","webpack://BeautyForm/./src/Utilities/loginUtils.ts","webpack://BeautyForm/./src/components/Organisms/LoginContainer/LoginContainer.ts","webpack://BeautyForm/./src/components/Atoms/Option/Option.ts","webpack://BeautyForm/./src/components/Molecules/Select/Select.ts","webpack://BeautyForm/./src/Constants/countries.ts","webpack://BeautyForm/./src/Utilities/signupUtils.ts","webpack://BeautyForm/./src/Constants/registration-data.ts","webpack://BeautyForm/./src/components/Organisms/RegisterContainer/RegisterContainer.ts","webpack://BeautyForm/./src/components/Templates/SigninUpTemplate/SigninUpTemplate.ts","webpack://BeautyForm/./src/components/Pages/main-page/main-page.ts"],"sourcesContent":["export class Background{\n    private _backgroundImage: HTMLImageElement\n    constructor(){\n        this._backgroundImage = document.createElement('img')\n        this._backgroundImage.src = '../../../../Assets/images/pageImage.jpg'\n        this._backgroundImage.classList.add('background-image')\n    }\n\n    get background(){\n        return this._backgroundImage\n    }\n}\n","export class Image{\n    private _image: HTMLDivElement\n    constructor(){\n        this._image = document.createElement('div')\n        this._image.classList.add('main-image')\n    }\n\n    get image(){\n        return this._image\n    }\n}\n","enum formTitle {\n    login = 'Member Login',\n    signup = 'Registration'\n}\n\nenum backLinkText {\n    login = 'Back to Login',\n    signup = 'Register Here!'\n}\n\nenum placeHolders {\n    email = 'Your email',\n    password = 'Your password',\n    firstName = 'Your first name',\n    lastName = 'Your last name',\n    password2 = 'Your password again'\n}\n\nenum icons {\n    user = 'fa-solid fa-user',\n    email = 'fa-solid fa-envelope',\n    password = 'fa-solid fa-lock'\n}\n\nenum validationError {\n    name = 'Invalid Name',\n    invalidEmail = 'Please enter an email, example: dawood@gmail.com',\n    usedEmail = 'This Email is already used',\n    notMatching = 'Both passwords don\\'t match',\n    shortPass = 'the length should be at least 8 characters',\n    noNumbers = 'It should has numbers'\n}\n\nexport {\n    backLinkText,\n    formTitle,\n    icons,\n    placeHolders,\n    validationError\n}\n","import { inputLoginProperties } from '../Interfaces/login-data-interface'\nimport { icons,placeHolders } from './enums'\n\nexport const userInputElements : inputLoginProperties[]= [\n    {iconType: icons.user, name: 'email2', placeHolder: placeHolders.email, type: 'email', },\n    {iconType: icons.password, name: 'password', placeHolder: placeHolders.password, type: 'password', },\n]\n","export class Button{\n    private _button: HTMLButtonElement\n    constructor(private text: string = '', private container: string = '', public factionName: () => void){\n        this._button = document.createElement('button')\n        this._button.textContent = this.text\n        this._button.classList.add(`${this.container}-button`)\n        this._button.addEventListener('click', factionName)\n    }\n\n    get button(){\n        return this._button\n    }\n}\n","export class Title{\n    private _title : HTMLParagraphElement\n    constructor(private text : string){\n        this._title = document.createElement('h2')\n        this._title.textContent = this.text\n        this._title.classList.add('form-title')\n    }\n\n    get title(){\n        return this._title\n    }\n}\n","export class ValidationText{\n    private _text : HTMLSpanElement\n    constructor(){\n        this._text = document.createElement('span')\n        this._text.classList.add('validation-text')\n    }\n\n    get text(){\n        return this._text\n    }\n}\n","export class Label{\n    private _label: HTMLElement\n    constructor(private labelClass: string){\n        this._label = document.createElement('i')\n        const classes = this.labelClass.split(' ')\n        classes.forEach(currClass => {this._label.classList.add(currClass)})\n    }\n\n    get label(){\n        return this._label\n    }\n}\n","export class TextField{\n    private _textField: HTMLInputElement\n    constructor(private type : string ='', private placeHolder : string='',\n     private name : string='', public actionFunction : any){\n        this._textField = document.createElement('input')\n        this._textField.type = this.type\n        this._textField.name = this.name\n        this._textField.placeholder = this.placeHolder\n        if(this._textField.name !== 'password' && this._textField.name !== 'email2'){\n        ['click','input','change'].forEach((currEvent) => {\n            this._textField.addEventListener(\n                currEvent,\n                () => {\n                    actionFunction(this._textField,\n                    this.name === 'password2' ?\n                    document.querySelectorAll('input[name=password]')[1] : null)\n                }\n            )\n        })}\n\n        this._textField.classList.add('text-field')\n    }\n\n    get textField(){\n        return this._textField\n    }\n}\n","import { Label } from \"../../Atoms/Label/Label\"\nimport { TextField } from \"../../Atoms/TextField/TextField\"\n\ntype actionFunctionType = (a: HTMLInputElement, b?: HTMLInputElement) => boolean\n\nexport class TextInfo {\n    private _textInfo : HTMLDivElement\n    constructor(private type : string ='', private placeHolder : string = '', private name : string = '',\n     private labelName : string ='', public actionFunction? : actionFunctionType){\n        this._textInfo = document.createElement('div')\n        const {textField} = new TextField(this.type, this.placeHolder, this.name, this.actionFunction)\n        const {label} = new Label(this.labelName)\n        const labelWrapper = document.createElement('span')\n        labelWrapper.classList.add('label-wrapper')\n        labelWrapper.appendChild(label)\n\n        this._textInfo.classList.add('text-info')\n        this._textInfo.appendChild(labelWrapper)\n        this._textInfo.appendChild(textField)\n    }\n\n    get currTextInfo(){\n        return this._textInfo\n    }\n}\n","import { ValidationText } from '../../Atoms/ValidationText/ValidationText'\nimport { TextInfo } from '../TextInfo/TextInfo'\n\ntype actionFunctionType = (a: HTMLInputElement, b?: HTMLInputElement) => boolean\n\nexport class MainUserInputContainer{\n    private _mainInputContainer : HTMLDivElement\n    constructor(private type : string ='', private placeHolder : string = '', private name : string = '',\n    private labelName : string ='', public actionFunction? : actionFunctionType){\n        this._mainInputContainer = document.createElement('div')\n        this._mainInputContainer.classList.add('user-input-error-container')\n        const inputField = new TextInfo(this.type, this.placeHolder, this.name, this.labelName, this.actionFunction).currTextInfo\n        const errorText = new ValidationText().text\n\n        this._mainInputContainer.appendChild(inputField)\n        this._mainInputContainer.appendChild(errorText)\n    }\n\n    get mainInputContainer(){\n        return this._mainInputContainer\n    }\n}\n","export class PrevPageLink{\n    private _requiredPage : string\n    private _backLink : HTMLAnchorElement\n    constructor(private type: string, private text: string){\n        this._requiredPage = this.type\n        this._backLink = document.createElement('a')\n        this._backLink.classList.add(`${this._requiredPage}-link`)\n        this._backLink.textContent = this.text\n        setTimeout( () => this._backLink.addEventListener('click',this.switchContent), 1000)\n    }\n\n    switchContent = (event: MouseEvent): void => {\n        const currForm = this._requiredPage === 'login'\n        const currContent = ((event.target) as Element).closest(currForm ? '.login-container':'.register-container' )\n        const nextContent = document.querySelector(currForm ? '.register-container' : '.login-container')\n        nextContent?.classList.remove('hide-container')\n        currContent?.classList.add('hide-container')\n    }\n\n    get loginText(){\n        return this._backLink\n    }\n}\n","export class RegisterText{\n    private _registerText: HTMLSpanElement\n    constructor(text: string){\n        this._registerText = document.createElement('span')\n        this._registerText.textContent = text\n        this._registerText.classList.add('register-text')\n    }\n\n    get registerText(){\n        return this._registerText\n    }\n}\n","import { PrevPageLink } from '../../Atoms/PrevPageLink/PrevPageLink'\nimport { RegisterText } from '../../Atoms/RegisterText/RegisterText'\n\nimport { backLinkText } from '../../../Constants/enums'\n\nexport class RegisterIndicator{\n    private _registerTextContainer : HTMLDivElement\n    constructor(private text: string){\n        this._registerTextContainer = document.createElement('div')\n        const registerLink = new PrevPageLink('login', backLinkText.signup).loginText\n        const {registerText} = new RegisterText(this.text)\n\n        this._registerTextContainer.classList.add('register-text-container')\n        this._registerTextContainer.appendChild(registerText)\n        this._registerTextContainer.appendChild(registerLink)\n    }\n\n    get registerIndicator(){\n        return this._registerTextContainer\n    }\n}\n","import { storageInterface } from '../Interfaces/local-storage-interface'\n\nexport class LocalStorage<T extends string> {\n    private _storage: storageInterface\n\n    constructor(getStorage = (): storageInterface => window.localStorage) {\n        this._storage = getStorage()\n    }\n\n    get(key: T): string | null {\n        return this._storage.getItem(key)\n    }\n\n    set(key: T, value: string): void {\n        this._storage.setItem(key, value)\n    }\n\n    removeItem(key: T): void {\n        this._storage.removeItem(key)\n    }\n\n    removeItems(keys: T[]): void {\n        keys.forEach((key) => this.removeItem(key))\n    }\n}\n","import { LocalStorage } from \"../Hooks/LocalStorage\"\n\nexport const checkLoginInput = () => {\n    const currEmail = document.querySelector('input[name=email2]') as HTMLInputElement\n    const currPass = document.querySelector('input[name=password]') as HTMLInputElement\n    const currTextInfo = currPass?.parentNode as HTMLDivElement\n\n    const currLocalStorage = new LocalStorage()\n    const userEmail = currLocalStorage.get(currEmail.value)\n    const userInfo = JSON.parse(userEmail??'[]')\n    if(userEmail && userInfo[0].pass === currPass.value){\n        currTextInfo?.classList.remove('incorrect')\n        currTextInfo?.classList.add('welcome')\n    } else {\n        currTextInfo?.classList.remove('incorrect')\n        currTextInfo?.classList.remove('welcome')\n        currTextInfo?.classList.add('incorrect')\n    }\n}\n","import { formTitle } from '../../../Constants/enums'\nimport { userInputElements } from '../../../Constants/login-data'\nimport { Button } from '../../Atoms/Button/Button'\nimport { Title } from '../../Atoms/Title/Title'\nimport { MainUserInputContainer } from '../../Molecules/MainUserInputContainer/MainUserInputContainer'\nimport { RegisterIndicator } from '../../Molecules/RegisterIndicator/RegisterIndicator'\nimport { checkLoginInput } from '../../../Utilities/loginUtils'\n\nexport class LoginContainer{\n    private _loginContainer : HTMLDivElement\n    constructor(){\n        this._loginContainer = document.createElement('div')\n        this._loginContainer.classList.add('login-container')\n\n        const {title} = new Title(formTitle.login)\n        this._loginContainer.appendChild(title)\n\n        const userInputContainer = document.createElement('div')\n        userInputContainer.classList.add('user-input-container')\n\n        userInputElements.forEach(input => {\n            const textElement = new MainUserInputContainer(input.type, input.placeHolder, input.name, input.iconType).mainInputContainer\n            userInputContainer.appendChild(textElement)\n        })\n\n        const loginButton = new Button('Sign in', 'login', checkLoginInput).button\n        const registerText = new RegisterIndicator('Don\\'t have account? ').registerIndicator\n\n        userInputContainer.appendChild(loginButton)\n        userInputContainer.appendChild(registerText)\n\n        this._loginContainer.appendChild(userInputContainer)\n    }\n\n    get login(){\n        return this._loginContainer\n    }\n}\n","export class Option{\n    private _option: HTMLOptionElement\n    constructor(private value: string = ''){\n        this._option = document.createElement('option')\n        this._option.classList.add('country-option')\n        this._option.textContent = this.value\n        this._option.value = this.value\n    }\n\n    get option(){\n        return this._option\n    }\n}","import { Label } from '../../Atoms/Label/Label'\nimport { Option } from '../../Atoms/Option/Option'\n\nexport class Select{\n    private _select : HTMLSelectElement\n    private _selectContainer : HTMLDivElement\n    constructor(private options: string[]){\n        this._selectContainer = document.createElement('div')\n        this._select = document.createElement('select')\n        const iconContainer = document.createElement('span')\n        iconContainer.classList.add('label-wrapper')\n        this._selectContainer.classList.add('select-container')\n        this._select.classList.add('select')\n        this._select.name = 'countries'\n        const selectLabel = new Label('fa-solid fa-globe').label\n        iconContainer.appendChild(selectLabel)\n        this.options.forEach(country => {\n            const countryOption = new Option(country).option\n            this._select.appendChild(countryOption)\n        })\n\n        this._selectContainer.appendChild(iconContainer)\n        this._selectContainer.appendChild(this._select)\n    }\n\n    get select(){\n        return this._selectContainer\n    }\n}\n","export const countries : string[] = [\n    'Country', 'Algeria', 'Bahrain', 'Comoros', 'Djibouti', 'Egypt', 'Iraq',\n    'Jordan', 'Kuwait', 'Lebanon', 'Libya', 'Mauritania', 'Morocco',\n    'Oman', 'Qatar', 'Saudi Arabia', 'Somalia', 'Sudan', 'Syria',\n    'Tunisia', 'United Arab Emirates', 'Yemen'\n]\n","import { validationError } from \"../Constants/enums\"\nimport { LocalStorage } from \"../Hooks/LocalStorage\"\n\nconst checkRegistrationInput = <T extends HTMLInputElement>() : void => {\n    const fNameHasNumbers = document.querySelector('input[name=firstName]') as T\n    const lNameHasNumbers = document.querySelector('input[name=lastName]') as T\n    const enteredEmail = document.querySelectorAll('input[name=email]')[0] as T\n    const firstPassword = document.querySelectorAll('input[name=password]')[1] as T\n    const secondPassword = document.querySelector('input[name=password2]') as T\n    if(validName(fNameHasNumbers) && validName(lNameHasNumbers)\n    && checkEmail(enteredEmail) && checkPasswords(firstPassword, secondPassword)){\n        const tempObj = {email: enteredEmail.value, pass: firstPassword.value}\n        const currLocalStorage = new LocalStorage()\n        const userInfoArray = []\n        userInfoArray.push(tempObj)\n        currLocalStorage.set(enteredEmail.value, JSON.stringify(userInfoArray))\n\n        switchContent('login')\n    }\n}\n\nconst validName = (name : HTMLInputElement) : boolean => {\n    const currTextInfo = name.parentNode?.parentNode?.childNodes[1] as HTMLParagraphElement\n    const hasNumber = Boolean(name.value.match(/\\d/))\n    if(hasNumber || !name.value){\n        currTextInfo.textContent = validationError.name\n        return false\n    }\n    else{\n        currTextInfo.textContent =''\n        return true\n    }\n}\n\nconst checkEmail = (email : HTMLInputElement) : boolean => {\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    const currTextInfo = email.parentNode?.parentNode?.childNodes[1] as HTMLParagraphElement\n    const currLocalStorage = new LocalStorage()\n    if(!email.value || !email.value.match(regex)){\n        currTextInfo.textContent = validationError.invalidEmail\n        return false\n    } else {\n        const used = currLocalStorage.get(email.value)\n        if(used){\n            currTextInfo.textContent = validationError.usedEmail\n            return false\n        } else {\n            currTextInfo.textContent = ''\n            return true\n        }\n    }\n}\n\nconst checkPasswords = (password1 : HTMLInputElement, password2 : HTMLInputElement) : boolean => {\n    const currTextInfo = password1.parentNode?.parentNode?.childNodes[1] as HTMLParagraphElement\n    const errorText =[]\n    if(!password1.value || password1.value !== password2.value){\n        errorText.push(validationError.notMatching)\n        if(password2.value.length < 8){\n            errorText.push(validationError.shortPass)\n        }\n\n        if(!password2.value.match(/\\d/)){\n            errorText.push(validationError.noNumbers)\n        }\n\n        currTextInfo.textContent = errorText.join(', ')\n\n        return false\n    } else {\n        currTextInfo.textContent = ''\n        return true\n    }\n}\n\nconst switchContent = (nextContent : string) : void => {\n    const currContentElements = document.querySelector(nextContent === 'login'? '.register-container': '.login-container') as HTMLDivElement\n    const nextContentElements = document.querySelector(nextContent === 'login'? '.login-container': '.register-container') as HTMLDivElement\n    currContentElements.classList.toggle('hide-container')\n    nextContentElements.classList.toggle('hide-container')\n}\n\nexport {\n    checkEmail,\n    checkPasswords,\n    checkRegistrationInput,\n    switchContent,\n    validName,\n}\n","import { mainInputProperties } from '../Interfaces/register-data-interface'\nimport {\n    checkEmail,\n    checkPasswords,\n    validName,\n} from '../Utilities/signupUtils'\nimport { icons,placeHolders } from './enums'\n\nexport const userInputElements : mainInputProperties[] = [\n    {label: icons.user, name: 'firstName', placeHolder: placeHolders.firstName, type: 'text', validation: validName},\n    {label: icons.user, name: 'lastName', placeHolder: placeHolders.lastName, type: 'text', validation: validName},\n    {label: icons.email, name: 'email', placeHolder: placeHolders.email, type: 'email', validation: checkEmail},\n    {label: icons.password, name: 'password', placeHolder: placeHolders.password,type: 'password'},\n    {label: icons.password, name: 'password2', placeHolder: placeHolders.password2, type: 'password', validation: checkPasswords},\n]\n","import { Button } from \"../../Atoms/Button/Button\"\nimport { PrevPageLink } from \"../../Atoms/PrevPageLink/PrevPageLink\"\nimport { Title } from \"../../Atoms/Title/Title\"\n\nimport { MainUserInputContainer } from '../../Molecules/MainUserInputContainer/MainUserInputContainer'\nimport { Select } from \"../../Molecules/Select/Select\"\n\nimport { countries } from \"../../../Constants/countries\"\nimport { backLinkText, formTitle } from \"../../../Constants/enums\"\nimport { userInputElements } from \"../../../Constants/registration-data\"\n\nimport { mainInputProperties } from \"../../../Interfaces/register-data-interface\"\n\nimport { checkRegistrationInput } from '../../../Utilities/signupUtils'\n\n\nexport class RegisterContainer{\n    private _registerContainer : HTMLDivElement\n    constructor(){\n        this._registerContainer = document.createElement('div')\n        this._registerContainer.classList.add('register-container')\n        this._registerContainer.classList.add('hide-container')\n\n        const {title} = new Title(formTitle.signup)\n        this._registerContainer.appendChild(title)\n\n        userInputElements.forEach((input: mainInputProperties) => {\n            let textElement\n            if(input.validation){\n                textElement = new MainUserInputContainer(input.type, input.placeHolder, input.name, input.label, input.validation).mainInputContainer\n            } else {\n                textElement = new MainUserInputContainer(input.type, input.placeHolder, input.name, input.label).mainInputContainer\n            }\n            this._registerContainer.appendChild(textElement)\n        })\n\n        const country = new Select(countries).select\n        this._registerContainer.appendChild(country)\n\n        const registerButton = new Button('Register', 'signup', checkRegistrationInput).button\n        this._registerContainer.appendChild(registerButton)\n\n        const backToLogin = new PrevPageLink('signup', backLinkText.login).loginText\n        this._registerContainer.appendChild(backToLogin)\n    }\n\n    get register(){\n        return this._registerContainer\n    }\n}\n","import { Background } from \"../../Atoms/Background/Background\"\nimport { Image } from \"../../Atoms/Image/Image\"\nimport { LoginContainer } from \"../../Organisms/LoginContainer/LoginContainer\"\nimport { RegisterContainer } from \"../../Organisms/RegisterContainer/RegisterContainer\"\n\nexport class SignInUpTemplate{\n    private _container : HTMLDivElement\n    constructor(){\n        this._container = document.createElement('div')\n        this._container.classList.add('main-container')\n\n        const displayedContainer = document.createElement('div')\n        displayedContainer.classList.add('displayed-container')\n\n        const mainImage = new Image().image\n\n        const registration = new RegisterContainer().register\n        const userLogin = new LoginContainer().login\n        const {background} = new Background()\n\n        displayedContainer.appendChild(mainImage)\n        displayedContainer.appendChild(userLogin)\n        displayedContainer.appendChild(registration)\n        this._container.appendChild(background)\n        this._container.appendChild(displayedContainer)\n    }\n\n    get mainContainer(){\n        return this._container\n    }\n}\n","// require('module-alias/register');\n\nimport { SignInUpTemplate } from '../../Templates/SigninUpTemplate/SigninUpTemplate'\n\nwindow.addEventListener('DOMContentLoaded', (_event: Event) => {\n    const {mainContainer} = new SignInUpTemplate()\n    document.body.appendChild(mainContainer)\n})\n"],"names":["Background","constructor","this","_backgroundImage","document","createElement","src","classList","add","background","Image","_image","image","formTitle","backLinkText","placeHolders","icons","validationError","userInputElements","iconType","user","name","placeHolder","email","type","password","Button","text","container","factionName","_button","textContent","addEventListener","button","Title","_title","title","ValidationText","_text","Label","labelClass","_label","split","forEach","currClass","label","TextField","actionFunction","_textField","placeholder","currEvent","querySelectorAll","textField","TextInfo","labelName","_textInfo","labelWrapper","appendChild","currTextInfo","MainUserInputContainer","_mainInputContainer","inputField","errorText","mainInputContainer","PrevPageLink","switchContent","event","currForm","_requiredPage","currContent","closest","nextContent","querySelector","remove","_backLink","setTimeout","loginText","RegisterText","_registerText","registerText","RegisterIndicator","_registerTextContainer","registerLink","signup","registerIndicator","LocalStorage","getStorage","window","localStorage","_storage","get","key","getItem","set","value","setItem","removeItem","removeItems","keys","checkLoginInput","currEmail","currPass","parentNode","userEmail","userInfo","JSON","parse","pass","LoginContainer","_loginContainer","login","userInputContainer","input","textElement","loginButton","Option","_option","option","Select","options","_selectContainer","_select","iconContainer","selectLabel","country","countryOption","select","countries","checkRegistrationInput","fNameHasNumbers","lNameHasNumbers","enteredEmail","firstPassword","secondPassword","validName","checkEmail","checkPasswords","tempObj","currLocalStorage","userInfoArray","push","stringify","childNodes","Boolean","match","usedEmail","invalidEmail","password1","password2","notMatching","length","shortPass","noNumbers","join","currContentElements","nextContentElements","toggle","firstName","validation","lastName","RegisterContainer","_registerContainer","registerButton","backToLogin","register","SignInUpTemplate","_container","displayedContainer","mainImage","registration","userLogin","mainContainer","_event","body"],"sourceRoot":""}