{"version":3,"file":"./bundle.js","mappings":"mBAAO,MAAMA,EAETC,cACIC,KAAKC,iBAAmBC,SAASC,cAAc,OAC/CH,KAAKC,iBAAiBG,IAAM,yBAC5BJ,KAAKC,iBAAiBI,UAAUC,IAAI,mBACxC,CAEIC,iBACA,OAAOP,KAAKC,gBAChB,ECVG,MAAMO,EAETT,cACIC,KAAKS,OAASP,SAASC,cAAc,OACrCH,KAAKS,OAAOJ,UAAUC,IAAI,aAC9B,CAEII,YACA,OAAOV,KAAKS,MAChB,ECTJ,IAAKE,EAKAC,EAKAC,EAQAC,EAMAC,GAxBL,SAAKJ,GACD,uBACA,uBACH,CAHD,CAAKA,IAAAA,EAAS,KAKd,SAAKC,GACD,wBACA,yBACH,CAHD,CAAKA,IAAAA,EAAY,KAKjB,SAAKC,GACD,qBACA,2BACA,8BACA,4BACA,iCACH,CAND,CAAKA,IAAAA,EAAY,KAQjB,SAAKC,GACD,0BACA,+BACA,6BACH,CAJD,CAAKA,IAAAA,EAAK,KAMV,SAAKC,GACD,sBACA,kEACA,yCACA,2CACA,yDACA,mCACH,CAPD,CAAKA,IAAAA,EAAe,KCrBb,MAAMC,EAA4C,CACrD,CAACC,SAAUH,EAAMI,KAAMC,KAAM,SAAUC,YAAaP,EAAaQ,MAAOC,KAAM,SAC9E,CAACL,SAAUH,EAAMS,SAAUJ,KAAM,WAAYC,YAAaP,EAAaU,SAAUD,KAAM,aCHpF,MAAME,EAGTzB,YAAY0B,EAAa,KAAwBC,OAAOC,eACpD3B,KAAK4B,SAAWH,GACpB,CAEAI,IAAIC,GACA,OAAO9B,KAAK4B,SAASG,QAAQD,EACjC,CAEAE,IAAIF,EAAQG,GACRjC,KAAK4B,SAASM,QAAQJ,EAAKG,EAC/B,CAEAE,WAAWL,GACP9B,KAAK4B,SAASO,WAAWL,EAC7B,CAEAM,YAAYC,GACRA,EAAKC,SAASR,GAAQ9B,KAAKmC,WAAWL,IAC1C,ECrBG,MCmBDS,EAAapB,I,QACf,MAAMqB,EAA0C,QAA3B,EAAe,QAAf,EAAArB,EAAKsB,kBAAU,eAAEA,kBAAU,eAAEC,WAAW,GAE7D,OADkBC,QAAQxB,EAAKc,MAAMW,MAAM,SAC1BzB,EAAKc,OAClBO,EAAaK,YAAc9B,EAAgBI,MACpC,IAGPqB,EAAaK,YAAa,IACnB,E,EAITC,EAAczB,I,QAChB,MACMmB,EAA2C,QAA5B,EAAgB,QAAhB,EAAAnB,EAAMoB,kBAAU,eAAEA,kBAAU,eAAEC,WAAW,GACxDK,EAAmB,IAAIvB,EAC7B,OAAIH,EAAMY,OAAUZ,EAAMY,MAAMW,MAHlB,iDAOGG,EAAiBlB,IAAIR,EAAMY,QAEpCO,EAAaK,YAAc9B,EAAgBiC,WACpC,IAEPR,EAAaK,YAAc,IACpB,IATXL,EAAaK,YAAc9B,EAAgBkC,cACpC,E,EAaTC,EAAiB,CAACC,EAA8BC,K,QAClD,MAAMZ,EAA+C,QAAhC,EAAoB,QAApB,EAAAW,EAAUV,kBAAU,eAAEA,kBAAU,eAAEC,WAAW,GAClE,IAAIW,EAAW,GACf,OAAIF,EAAUlB,OAASkB,EAAUlB,QAAUmB,EAAUnB,OAcjDO,EAAaK,YAAc,IACpB,IAdPQ,EAAUC,KAAKvC,EAAgBwC,aAC5BH,EAAUnB,MAAMuB,OAAS,GACxBH,EAAUC,KAAKvC,EAAgB0C,WAG/Bd,QAAQS,EAAUnB,MAAMW,MAAM,QAC9BS,EAAUC,KAAKvC,EAAgB2C,WAGnClB,EAAaK,YAAcQ,EAAUM,KAAK,OAEnC,E,ECjER,MAAMC,EAET7D,YAAoB8D,EAAe,GAAYC,EAAoB,IAA/C,KAAAD,KAAAA,EAA2B,KAAAC,UAAAA,EAC3C9D,KAAK+D,QAAU7D,SAASC,cAAc,UACtCH,KAAK+D,QAAQlB,YAAc7C,KAAK6D,KAChC7D,KAAK+D,QAAQ1D,UAAUC,IAAI,GAAGN,KAAK8D,oBACnC9D,KAAK+D,QAAQC,iBACT,SACA,IAC8B,UAAnBhE,KAAK8D,UFVG,MAC3B,MAAMG,EAAY/D,SAASgE,cAAc,sBACnCC,EAAWjE,SAASgE,cAAc,wBAClC1B,EAAe2B,aAAQ,EAARA,EAAU1B,WAGzB2B,GADmB,IAAI5C,GACMK,IAAIoC,EAAUhC,OAC3CoC,EAAWC,KAAKC,MAAMH,QAAAA,EAAW,MACpCA,GAAaC,EAAS,GAAGG,OAASL,EAASlC,OAC1CO,SAAAA,EAAcnC,UAAUoE,OAAO,aAC/BjC,SAAAA,EAAcnC,UAAUC,IAAI,aAE5BkC,SAAAA,EAAcnC,UAAUoE,OAAO,aAC/BjC,SAAAA,EAAcnC,UAAUoE,OAAO,WAC/BjC,SAAAA,EAAcnC,UAAUC,IAAI,a,EEJgBoE,GDTrB,MAC3B,MAAMC,EAAkBzE,SAASgE,cAAc,yBACzCU,EAAkB1E,SAASgE,cAAc,wBACzCW,EAAe3E,SAAS4E,iBAAiB,qBAAqB,GAC9DC,EAAgB7E,SAAS4E,iBAAiB,wBAAwB,GAClEE,EAAiB9E,SAASgE,cAAc,yBAC9C,GAAG3B,EAAUoC,IAAoBpC,EAAUqC,IACxC9B,EAAW+B,IAAiB3B,EAAe6B,EAAeC,GAAgB,CACzE,MAAMC,EAAU,CAAC5D,MAAOwD,EAAa5C,MAAOuC,KAAMO,EAAc9C,OAC1Dc,EAAmB,IAAIvB,EACvB0D,EAAgB,GACtBA,EAAc5B,KAAK2B,GACnBlC,EAAiBf,IAAI6C,EAAa5C,MAAOqC,KAAKa,UAAUD,IA4D1C,CAACE,IACnB,MAAMC,EAAsBnF,SAASgE,cAA8B,UAAhBkB,EAAyB,sBAAuB,oBAC7FE,EAAsBpF,SAASgE,cAA8B,UAAhBkB,EAAyB,mBAAoB,uBAChGC,EAAoBhF,UAAUkF,OAAO,kBACrCD,EAAoBjF,UAAUkF,OAAO,iBAAiB,EA9DlDC,CAAc,Q,GCLiDC,IAGnE,CAEIC,aACA,OAAO1F,KAAK+D,OAChB,ECnBG,MAAM4B,EAET5F,YAAoB8D,GAAA,KAAAA,KAAAA,EAChB7D,KAAK4F,OAAS1F,SAASC,cAAc,MACrCH,KAAK4F,OAAO/C,YAAc7C,KAAK6D,KAC/B7D,KAAK4F,OAAOvF,UAAUC,IAAI,aAC9B,CAEIuF,YACA,OAAO7F,KAAK4F,MAChB,ECRG,MAAME,EAGT/F,YAAoBuB,GAAA,KAAAA,KAAAA,EAQpB,KAAAkE,cAAiBO,IACb,MAAMC,EAAkC,UAAvBhG,KAAKiG,cAChBC,EAAgBH,EAAY,OAAcI,QAAQH,EAAW,mBAAmB,uBAChFZ,EAAclF,SAASgE,cAAc8B,EAAW,sBAAwB,oBAC9EZ,SAAAA,EAAa/E,UAAUoE,OAAO,kBAC9ByB,SAAAA,EAAa7F,UAAUC,IAAI,iBAAiB,EAZ5CN,KAAKiG,cAAgBjG,KAAKsB,KAC1BtB,KAAKoG,UAAYlG,SAASC,cAAc,KACxCH,KAAKoG,UAAU/F,UAAUC,IAAI,GAAGN,KAAKiG,sBACrCjG,KAAKoG,UAAUvD,YAA4B,UAAd7C,KAAKsB,KAAkBV,EAAayF,MAAMzF,EAAA,OACvE0F,YAAY,IAAMtG,KAAKoG,UAAUpC,iBAAiB,QAAQhE,KAAKwF,gBAAgB,IACnF,CAUIe,gBACA,OAAOvG,KAAKoG,SAChB,ECvBG,MAAMI,EAETzG,YAAY8D,GACR7D,KAAKyG,cAAgBvG,SAASC,cAAc,QAC5CH,KAAKyG,cAAc5D,YAAcgB,EACjC7D,KAAKyG,cAAcpG,UAAUC,IAAI,gBACrC,CAEIoG,mBACA,OAAO1G,KAAKyG,aAChB,ECPG,MAAME,EAET5G,YAAoB8D,GAAA,KAAAA,KAAAA,EAChB7D,KAAK4G,uBAAyB1G,SAASC,cAAc,OACrD,MAAM0G,EAAe,IAAIf,EAAa,SAASS,WACzC,aAACG,GAAgB,IAAIF,EAAaxG,KAAK6D,MAE7C7D,KAAK4G,uBAAuBvG,UAAUC,IAAI,2BAC1CN,KAAK4G,uBAAuBE,YAAYJ,GACxC1G,KAAK4G,uBAAuBE,YAAYD,EAC5C,CAEIE,wBACA,OAAO/G,KAAK4G,sBAChB,ECjBG,MAAMI,EAETjH,cACIC,KAAKiH,MAAQ/G,SAASC,cAAc,QACpCH,KAAKiH,MAAM5G,UAAUC,IAAI,kBAC7B,CAEIuD,WACA,OAAO7D,KAAKiH,KAChB,ECTG,MAAMC,EAETnH,YAAoBoH,GAAA,KAAAA,WAAAA,EAChBnH,KAAKoH,OAASlH,SAASC,cAAc,KACrBH,KAAKmH,WAAWE,MAAM,KAC9B/E,SAAQgF,IAActH,KAAKoH,OAAO/G,UAAUC,IAAIgH,EAAU,GACtE,CAEIC,YACA,OAAOvH,KAAKoH,MAChB,ECVG,MAAMI,EAETzH,YAAoBuB,EAAe,GAAYF,EAAqB,GAC3DD,EAAc,GAAWsG,GADd,KAAAnG,KAAAA,EAA2B,KAAAF,YAAAA,EACtC,KAAAD,KAAAA,EAAyB,KAAAsG,eAAAA,EAC9BzH,KAAK0H,WAAaxH,SAASC,cAAc,SACzCH,KAAK0H,WAAWpG,KAAOtB,KAAKsB,KAC5BtB,KAAK0H,WAAWvG,KAAOnB,KAAKmB,KAC5BnB,KAAK0H,WAAWC,YAAc3H,KAAKoB,YACP,aAAzBpB,KAAK0H,WAAWvG,MAAgD,WAAzBnB,KAAK0H,WAAWvG,MAC1D,CAAC,QAAQ,QAAQ,UAAUmB,SAASsF,IAChC5H,KAAK0H,WAAW1D,iBACZ4D,GACA,KACIH,EAAezH,KAAK0H,WACN,cAAd1H,KAAKmB,KACLjB,SAAS4E,iBAAiB,wBAAwB,GAAK,KAAK,GAEnE,IAGL9E,KAAK0H,WAAWrH,UAAUC,IAAI,aAClC,CAEIuH,gBACA,OAAO7H,KAAK0H,UAChB,ECpBG,MAAMI,EAET/H,YAAoBuB,EAAe,GAAYF,EAAuB,GAAYD,EAAgB,GACzF4G,EAAoB,GAAWN,GADpB,KAAAnG,KAAAA,EAA2B,KAAAF,YAAAA,EAAmC,KAAAD,KAAAA,EACzE,KAAA4G,UAAAA,EAA+B,KAAAN,eAAAA,EACpCzH,KAAKgI,UAAY9H,SAASC,cAAc,OACxC,MAAM,UAAC0H,GAAa,IAAIL,EAAUxH,KAAKsB,KAAMtB,KAAKoB,YAAapB,KAAKmB,KAAMnB,KAAKyH,iBACzE,MAACF,GAAS,IAAIL,EAAMlH,KAAK+H,WACzBE,EAAe/H,SAASC,cAAc,QAC5C8H,EAAa5H,UAAUC,IAAI,iBAC3B2H,EAAanB,YAAYS,GAEzBvH,KAAKgI,UAAU3H,UAAUC,IAAI,aAC7BN,KAAKgI,UAAUlB,YAAYmB,GAC3BjI,KAAKgI,UAAUlB,YAAYe,EAC/B,CAEIrF,mBACA,OAAOxC,KAAKgI,SAChB,EClBG,MAAME,EAETnI,YAAoBuB,EAAe,GAAYF,EAAuB,GAAYD,EAAgB,GAC1F4G,EAAoB,GAAWN,GADnB,KAAAnG,KAAAA,EAA2B,KAAAF,YAAAA,EAAmC,KAAAD,KAAAA,EAC1E,KAAA4G,UAAAA,EAA+B,KAAAN,eAAAA,EACnCzH,KAAKmI,oBAAsBjI,SAASC,cAAc,OAClDH,KAAKmI,oBAAoB9H,UAAUC,IAAI,8BACvC,MAAM8H,EAAa,IAAIN,EAAS9H,KAAKsB,KAAMtB,KAAKoB,YAAapB,KAAKmB,KAAMnB,KAAK+H,UAAW/H,KAAKyH,gBAAgBjF,aACvGa,GAAY,IAAI2D,GAAiBnD,KAEvC7D,KAAKmI,oBAAoBrB,YAAYsB,GACrCpI,KAAKmI,oBAAoBrB,YAAYzD,EACzC,CAEIgF,yBACA,OAAOrI,KAAKmI,mBAChB,ECbG,MAAMG,EAETvI,cACIC,KAAKuI,gBAAkBrI,SAASC,cAAc,OAC9CH,KAAKuI,gBAAgBlI,UAAUC,IAAI,mBAEnC,MAAM,MAACuF,GAAS,IAAIF,EAAMhF,EAAU0F,OACpCrG,KAAKuI,gBAAgBzB,YAAYjB,GAEjC,MAAM2C,EAAqBtI,SAASC,cAAc,OAClDqI,EAAmBnI,UAAUC,IAAI,wBAEjCU,EAAkBsB,SAAQmG,IACtB,MAAMC,EAAc,IAAIR,EAAuBO,EAAMnH,KAAMmH,EAAMrH,YAAaqH,EAAMtH,KAAMsH,EAAMxH,UAAUoH,mBAC1GG,EAAmB1B,YAAY4B,EAAY,IAG/C,MAAMC,EAAc,IAAI/E,EAAO,UAAW,SAAS8B,OAC7CgB,EAAe,IAAIC,EAAkB,wBAAyBI,kBAEpEyB,EAAmB1B,YAAY6B,GAC/BH,EAAmB1B,YAAYJ,GAE/B1G,KAAKuI,gBAAgBzB,YAAY0B,EACrC,CAEInC,YACA,OAAOrG,KAAKuI,eAChB,ECnCG,MAAMK,EAAuB,CAChC,UAAW,UAAW,UAAW,UAAW,WAAY,QAAS,OACjE,SAAU,SAAU,UAAW,QAAS,aAAc,UACtD,OAAQ,QAAS,eAAgB,UAAW,QAAS,QACrD,UAAW,uBAAwB,SCI1B,EAA4C,CACrD,CAACrB,MAAOzG,EAAMI,KAAMC,KAAM,YAAaC,YAAaP,EAAagI,UAAWvH,KAAM,OAAQwH,WAAYvG,GACtG,CAACgF,MAAOzG,EAAMI,KAAMC,KAAM,WAAYC,YAAaP,EAAakI,SAAUzH,KAAM,OAAQwH,WAAYvG,GACpG,CAACgF,MAAOzG,EAAMO,MAAOF,KAAM,QAASC,YAAaP,EAAaQ,MAAOC,KAAM,QAASwH,WAAYhG,GAChG,CAACyE,MAAOzG,EAAMS,SAAUJ,KAAM,WAAYC,YAAaP,EAAaU,SAASD,KAAM,YACnF,CAACiG,MAAOzG,EAAMS,SAAUJ,KAAM,YAAaC,YAAaP,EAAauC,UAAW9B,KAAM,WAAYwH,WAAY5F,ICb3G,MAAM8F,EAETjJ,YAAoBkC,EAAgB,IAAhB,KAAAA,MAAAA,EAChBjC,KAAKiJ,QAAU/I,SAASC,cAAc,UACtCH,KAAKiJ,QAAQ5I,UAAUC,IAAI,kBAC3BN,KAAKiJ,QAAQpG,YAAc7C,KAAKiC,MAChCjC,KAAKiJ,QAAQhH,MAAQjC,KAAKiC,KAC9B,CAEIiH,aACA,OAAOlJ,KAAKiJ,OAChB,ECRG,MAAME,EAGTpJ,YAAoBqJ,GAAA,KAAAA,QAAAA,EAChBpJ,KAAKqJ,iBAAmBnJ,SAASC,cAAc,OAC/CH,KAAKsJ,QAAUpJ,SAASC,cAAc,UACtC,MAAMoJ,EAAgBrJ,SAASC,cAAc,QAC7CoJ,EAAclJ,UAAUC,IAAI,iBAC5BN,KAAKqJ,iBAAiBhJ,UAAUC,IAAI,oBACpCN,KAAKsJ,QAAQjJ,UAAUC,IAAI,UAC3BN,KAAKsJ,QAAQnI,KAAO,YACpB,MAAMqI,EAAc,IAAItC,EAAM,qBAAqBK,MACnDgC,EAAczC,YAAY0C,GAC1BxJ,KAAKoJ,QAAQ9G,SAAQmH,IACjB,MAAMC,EAAgB,IAAIV,EAAOS,GAASP,OAC1ClJ,KAAKsJ,QAAQxC,YAAY4C,EAAc,IAG3C1J,KAAKqJ,iBAAiBvC,YAAYyC,GAClCvJ,KAAKqJ,iBAAiBvC,YAAY9G,KAAKsJ,QAC3C,CAEIK,aACA,OAAO3J,KAAKqJ,gBAChB,EChBG,MAAMO,EAET7J,cACIC,KAAK6J,mBAAqB3J,SAASC,cAAc,OACjDH,KAAK6J,mBAAmBxJ,UAAUC,IAAI,sBACtCN,KAAK6J,mBAAmBxJ,UAAUC,IAAI,kBAEtC,MAAM,MAACuF,GAAS,IAAIF,EAAMhF,EAAUmJ,QACpC9J,KAAK6J,mBAAmB/C,YAAYjB,GAEpC,WAA2B4C,IACvB,IAAIC,EAEAA,EADDD,EAAMK,WACS,IAAIZ,EAAuBO,EAAMnH,KAAMmH,EAAMrH,YAAaqH,EAAMtH,KAAMsH,EAAMlB,MAAOkB,EAAMK,YAAYT,mBAErG,IAAIH,EAAuBO,EAAMnH,KAAMmH,EAAMrH,YAAaqH,EAAMtH,KAAMsH,EAAMlB,OAAOc,mBAErGrI,KAAK6J,mBAAmB/C,YAAY4B,EAAY,IAGpD,MAAMe,EAAU,IAAIN,EAAOP,GAAWe,OACtC3J,KAAK6J,mBAAmB/C,YAAY2C,GAEpC,MAAMM,EAAiB,IAAInG,EAAO,WAAY,UAAU8B,OACxD1F,KAAK6J,mBAAmB/C,YAAYiD,GAEpC,MAAMC,EAAc,IAAIlE,EAAa,UAAUS,UAC/CvG,KAAK6J,mBAAmB/C,YAAYkD,EACxC,CAEIC,eACA,OAAOjK,KAAK6J,kBAChB,ECtCG,MAAMK,EAETnK,cACIC,KAAKmK,WAAajK,SAASC,cAAc,OACzCH,KAAKmK,WAAW9J,UAAUC,IAAI,kBAE9B,MAAM8J,EAAqBlK,SAASC,cAAc,OAClDiK,EAAmB/J,UAAUC,IAAI,uBAEjC,MAAM+J,GAAY,IAAI7J,GAAQE,MAExB4J,GAAe,IAAIV,GAAoBK,SACvCM,GAAY,IAAIjC,GAAiBjC,OACjC,WAAC9F,GAAc,IAAIT,EAEzBsK,EAAmBtD,YAAYuD,GAC/BD,EAAmBtD,YAAYyD,GAC/BH,EAAmBtD,YAAYwD,GAC/BtK,KAAKmK,WAAWrD,YAAYvG,GAC5BP,KAAKmK,WAAWrD,YAAYsD,EAChC,CAEII,oBACA,OAAOxK,KAAKmK,UAChB,EC3BJzI,OAAOsC,iBAAiB,oBAAqByG,IACzC,MAAM,cAACD,GAAiB,IAAIN,EAC5BhK,SAASwK,KAAK5D,YAAY0D,EAAc,G","sources":["webpack://BeautyForm/./src/components/atoms/Background.ts","webpack://BeautyForm/./src/components/atoms/Image.ts","webpack://BeautyForm/./src/constants/enums.ts","webpack://BeautyForm/./src/constants/login-data.ts","webpack://BeautyForm/./src/hooks/LocalStorage.ts","webpack://BeautyForm/./src/utilities/loginUtils.ts","webpack://BeautyForm/./src/utilities/signupUtils.ts","webpack://BeautyForm/./src/components/atoms/Button.ts","webpack://BeautyForm/./src/components/atoms/Title.ts","webpack://BeautyForm/./src/components/atoms/PrevPageLink.ts","webpack://BeautyForm/./src/components/atoms/RegisterText.ts","webpack://BeautyForm/./src/components/molecules/RegisterIndicator.ts","webpack://BeautyForm/./src/components/atoms/ValidationText.ts","webpack://BeautyForm/./src/components/atoms/Label.ts","webpack://BeautyForm/./src/components/atoms/TextField.ts","webpack://BeautyForm/./src/components/molecules/TextInfo.ts","webpack://BeautyForm/./src/components/molecules/MainUserInputContainer.ts","webpack://BeautyForm/./src/components/organisms/LoginContainer.ts","webpack://BeautyForm/./src/constants/countries.ts","webpack://BeautyForm/./src/constants/registration-data.ts","webpack://BeautyForm/./src/components/atoms/Option.ts","webpack://BeautyForm/./src/components/molecules/Select.ts","webpack://BeautyForm/./src/components/organisms/RegisterContainer.ts","webpack://BeautyForm/./src/components/templates/SigninUpTemplate.ts","webpack://BeautyForm/./src/components/pages/main-page.ts"],"sourcesContent":["export class Background{\n    private _backgroundImage: HTMLImageElement\n    constructor(){\n        this._backgroundImage = document.createElement('img')\n        this._backgroundImage.src = './images/pageImage.jpg'\n        this._backgroundImage.classList.add('background-image')\n    }\n\n    get background(){\n        return this._backgroundImage\n    }\n}\n","export class Image{\n    private _image: HTMLDivElement\n    constructor(){\n        this._image = document.createElement('div')\n        this._image.classList.add('main-image')\n    }\n\n    get image(){\n        return this._image\n    }\n}\n","enum formTitle {\n    login = 'Member Login',\n    signup = 'Registration'\n}\n\nenum backLinkText {\n    login = 'Back to Login',\n    signup = 'Register Here!'\n}\n\nenum placeHolders {\n    email = 'Your email',\n    password = 'Your password',\n    firstName = 'Your first name',\n    lastName = 'Your last name',\n    password2 = 'Your password again'\n}\n\nenum icons {\n    user = 'fa-solid fa-user',\n    email = 'fa-solid fa-envelope',\n    password = 'fa-solid fa-lock'\n}\n\nenum validationError {\n    name = 'Invalid Name',\n    invalidEmail = 'Please enter an email, example: dawood@gmail.com',\n    usedEmail = 'This Email is already used',\n    notMatching = 'Both passwords don\\'t match',\n    shortPass = 'the length should be at least 8 characters',\n    noNumbers = 'It should has numbers'\n}\n\nexport {\n    backLinkText,\n    formTitle,\n    icons,\n    placeHolders,\n    validationError\n}\n","import { inputLoginProperties } from '../interfaces/login-data-interface'\nimport { icons,placeHolders } from './enums'\n\nexport const userInputElements : inputLoginProperties[]= [\n    {iconType: icons.user, name: 'email2', placeHolder: placeHolders.email, type: 'email', },\n    {iconType: icons.password, name: 'password', placeHolder: placeHolders.password, type: 'password', },\n]\n","import { storageInterface } from '../interfaces/local-storage-interface'\n\nexport class LocalStorage<T extends string> {\n    private _storage: storageInterface\n\n    constructor(getStorage = (): storageInterface => window.localStorage) {\n        this._storage = getStorage()\n    }\n\n    get(key: T): string | null {\n        return this._storage.getItem(key)\n    }\n\n    set(key: T, value: string): void {\n        this._storage.setItem(key, value)\n    }\n\n    removeItem(key: T): void {\n        this._storage.removeItem(key)\n    }\n\n    removeItems(keys: T[]): void {\n        keys.forEach((key) => this.removeItem(key))\n    }\n}\n","import { LocalStorage } from \"../hooks/LocalStorage\"\n\nexport const checkLoginInput = () => {\n    const currEmail = document.querySelector('input[name=email2]') as HTMLInputElement\n    const currPass = document.querySelector('input[name=password]') as HTMLInputElement\n    const currTextInfo = currPass?.parentNode as HTMLDivElement\n\n    const currLocalStorage = new LocalStorage()\n    const userEmail = currLocalStorage.get(currEmail.value)\n    const userInfo = JSON.parse(userEmail??'[]')\n    if(userEmail && userInfo[0].pass === currPass.value){\n        currTextInfo?.classList.remove('incorrect')\n        currTextInfo?.classList.add('welcome')\n    } else {\n        currTextInfo?.classList.remove('incorrect')\n        currTextInfo?.classList.remove('welcome')\n        currTextInfo?.classList.add('incorrect')\n    }\n}\n","import { LocalStorage } from \"../hooks/LocalStorage\"\nimport { validationError } from \"../constants/enums\"\n\nconst checkRegistrationInput = <T extends HTMLInputElement>() : void => {\n    const fNameHasNumbers = document.querySelector('input[name=firstName]') as T\n    const lNameHasNumbers = document.querySelector('input[name=lastName]') as T\n    const enteredEmail = document.querySelectorAll('input[name=email]')[0] as T\n    const firstPassword = document.querySelectorAll('input[name=password]')[1] as T\n    const secondPassword = document.querySelector('input[name=password2]') as T\n    if(validName(fNameHasNumbers) && validName(lNameHasNumbers)\n    && checkEmail(enteredEmail) && checkPasswords(firstPassword, secondPassword)){\n        const tempObj = {email: enteredEmail.value, pass: firstPassword.value}\n        const currLocalStorage = new LocalStorage()\n        const userInfoArray = []\n        userInfoArray.push(tempObj)\n        currLocalStorage.set(enteredEmail.value, JSON.stringify(userInfoArray))\n\n        switchContent('login')\n    }\n}\n\nconst validName = (name : HTMLInputElement) : boolean => {\n    const currTextInfo = name.parentNode?.parentNode?.childNodes[1] as HTMLParagraphElement\n    const hasNumber = Boolean(name.value.match(/\\d/))\n    if(hasNumber || !name.value){\n        currTextInfo.textContent = validationError.name\n        return false\n    }\n    else{\n        currTextInfo.textContent =''\n        return true\n    }\n}\n\nconst checkEmail = (email : HTMLInputElement) : boolean => {\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n    const currTextInfo = email.parentNode?.parentNode?.childNodes[1] as HTMLParagraphElement\n    const currLocalStorage = new LocalStorage()\n    if(!email.value || !email.value.match(regex)){\n        currTextInfo.textContent = validationError.invalidEmail\n        return false\n    } else {\n        const used = currLocalStorage.get(email.value)\n        if(used){\n            currTextInfo.textContent = validationError.usedEmail\n            return false\n        } else {\n            currTextInfo.textContent = ''\n            return true\n        }\n    }\n}\n\nconst checkPasswords = (password1 : HTMLInputElement, password2 : HTMLInputElement) : boolean => {\n    const currTextInfo = password1.parentNode?.parentNode?.childNodes[1] as HTMLParagraphElement\n    let errorText =[];\n    if(!password1.value || password1.value !== password2.value){\n        errorText.push(validationError.notMatching)\n        if(password2.value.length < 8){\n            errorText.push(validationError.shortPass)\n        }\n\n        if(!Boolean(password2.value.match(/\\d/))){\n            errorText.push(validationError.noNumbers)\n        }\n\n        currTextInfo.textContent = errorText.join(', ')\n\n        return false\n    } else {\n        currTextInfo.textContent = ''\n        return true\n    }\n}\n\nconst switchContent = (nextContent : string) : void => {\n    const currContentElements = document.querySelector(nextContent === 'login'? '.register-container': '.login-container') as HTMLDivElement\n    const nextContentElements = document.querySelector(nextContent === 'login'? '.login-container': '.register-container') as HTMLDivElement\n    currContentElements.classList.toggle('hide-container')\n    nextContentElements.classList.toggle('hide-container')\n}\n\nexport {\n    checkEmail,\n    checkPasswords,\n    checkRegistrationInput,\n    switchContent,\n    validName,\n}\n","import { checkLoginInput } from '../../utilities/loginUtils'\nimport { checkRegistrationInput } from '../../utilities/signupUtils'\n\nexport class Button{\n    private _button: HTMLButtonElement\n    constructor(private text: string = '', private container: string = ''){\n        this._button = document.createElement('button')\n        this._button.textContent = this.text\n        this._button.classList.add(`${this.container}-button`)\n        this._button.addEventListener(\n            'click',\n            () => {\n                return this.container === 'login' ? checkLoginInput(): checkRegistrationInput()\n            }\n        )\n    }\n\n    get button(){\n        return this._button\n    }\n}\n","export class Title{\n    private _title : HTMLParagraphElement\n    constructor(private text : string){\n        this._title = document.createElement('h2')\n        this._title.textContent = this.text\n        this._title.classList.add('form-title')\n    }\n\n    get title(){\n        return this._title\n    }\n}\n","import { backLinkText } from \"../../constants/enums\"\n\nexport class PrevPageLink{\n    private _requiredPage : string\n    private _backLink : HTMLAnchorElement\n    constructor(private type: string){\n        this._requiredPage = this.type\n        this._backLink = document.createElement('a')\n        this._backLink.classList.add(`${this._requiredPage}-link`)\n        this._backLink.textContent = this.type === 'login'? backLinkText.login:backLinkText.signup\n        setTimeout( () => this._backLink.addEventListener('click',this.switchContent), 1000)\n    }\n\n    switchContent = (event: MouseEvent): void => {\n        const currForm = this._requiredPage === 'login'\n        const currContent = ((event.target) as Element).closest(currForm ? '.login-container':'.register-container' )\n        const nextContent = document.querySelector(currForm ? '.register-container' : '.login-container')\n        nextContent?.classList.remove('hide-container')\n        currContent?.classList.add('hide-container')\n    }\n\n    get loginText(){\n        return this._backLink\n    }\n}\n","export class RegisterText{\n    private _registerText: HTMLSpanElement\n    constructor(text: string){\n        this._registerText = document.createElement('span')\n        this._registerText.textContent = text\n        this._registerText.classList.add('register-text')\n    }\n\n    get registerText(){\n        return this._registerText\n    }\n}\n","import { PrevPageLink } from \"../atoms/PrevPageLink\"\nimport { RegisterText } from \"../atoms/RegisterText\"\n\nexport class RegisterIndicator{\n    private _registerTextContainer : HTMLDivElement\n    constructor(private text: string){\n        this._registerTextContainer = document.createElement('div')\n        const registerLink = new PrevPageLink('login').loginText\n        const {registerText} = new RegisterText(this.text)\n\n        this._registerTextContainer.classList.add('register-text-container')\n        this._registerTextContainer.appendChild(registerText)\n        this._registerTextContainer.appendChild(registerLink)\n    }\n\n    get registerIndicator(){\n        return this._registerTextContainer\n    }\n}\n","export class ValidationText{\n    private _text : HTMLSpanElement;\n    constructor(){\n        this._text = document.createElement('span')\n        this._text.classList.add('validation-text')\n    }\n\n    get text(){\n        return this._text;\n    }\n}\n","export class Label{\n    private _label: HTMLElement\n    constructor(private labelClass: string){\n        this._label = document.createElement('i')\n        const classes = this.labelClass.split(' ')\n        classes.forEach(currClass => {this._label.classList.add(currClass)})\n    }\n\n    get label(){\n        return this._label\n    }\n}\n","export class TextField{\n    private _textField: HTMLInputElement\n    constructor(private type : string ='', private placeHolder : string='',\n     private name : string='', public actionFunction : any){\n        this._textField = document.createElement('input')\n        this._textField.type = this.type\n        this._textField.name = this.name\n        this._textField.placeholder = this.placeHolder\n        if(this._textField.name !== 'password' && this._textField.name !== 'email2'){\n        ['click','input','change'].forEach((currEvent) => {\n            this._textField.addEventListener(\n                currEvent,\n                () => {\n                    actionFunction(this._textField,\n                    this.name === 'password2' ?\n                    document.querySelectorAll('input[name=password]')[1] : null)\n                }\n            )\n        })}\n\n        this._textField.classList.add('text-field')\n    }\n\n    get textField(){\n        return this._textField\n    }\n}\n","import { Label } from \"../atoms/Label\"\nimport { TextField } from \"../atoms/TextField\"\n\ntype actionFunctionType = (a: HTMLInputElement, b?: HTMLInputElement) => boolean\n\nexport class TextInfo {\n    private _textInfo : HTMLDivElement\n    constructor(private type : string ='', private placeHolder : string = '', private name : string = '',\n     private labelName : string ='', public actionFunction? : actionFunctionType){\n        this._textInfo = document.createElement('div')\n        const {textField} = new TextField(this.type, this.placeHolder, this.name, this.actionFunction)\n        const {label} = new Label(this.labelName)\n        const labelWrapper = document.createElement('span')\n        labelWrapper.classList.add('label-wrapper')\n        labelWrapper.appendChild(label)\n\n        this._textInfo.classList.add('text-info')\n        this._textInfo.appendChild(labelWrapper)\n        this._textInfo.appendChild(textField)\n    }\n\n    get currTextInfo(){\n        return this._textInfo\n    }\n}\n","import { ValidationText } from '../atoms/ValidationText'\nimport { TextInfo } from \"./TextInfo\";\n\ntype actionFunctionType = (a: HTMLInputElement, b?: HTMLInputElement) => boolean\n\nexport class MainUserInputContainer{\n    private _mainInputContainer : HTMLDivElement;\n    constructor(private type : string ='', private placeHolder : string = '', private name : string = '',\n    private labelName : string ='', public actionFunction? : actionFunctionType){\n        this._mainInputContainer = document.createElement('div')\n        this._mainInputContainer.classList.add('user-input-error-container')\n        const inputField = new TextInfo(this.type, this.placeHolder, this.name, this.labelName, this.actionFunction).currTextInfo\n        const errorText = new ValidationText().text;\n\n        this._mainInputContainer.appendChild(inputField);\n        this._mainInputContainer.appendChild(errorText);\n    }\n\n    get mainInputContainer(){\n        return this._mainInputContainer\n    }\n}\n","import { formTitle } from '../../constants/enums'\nimport { userInputElements } from '../../constants/login-data'\nimport { Button } from '../atoms/Button'\nimport { Title } from '../atoms/Title'\nimport { RegisterIndicator } from '../molecules/RegisterIndicator'\nimport { MainUserInputContainer } from '../molecules/MainUserInputContainer'\n\nexport class LoginContainer{\n    private _loginContainer : HTMLDivElement\n    constructor(){\n        this._loginContainer = document.createElement('div')\n        this._loginContainer.classList.add('login-container')\n\n        const {title} = new Title(formTitle.login)\n        this._loginContainer.appendChild(title)\n\n        const userInputContainer = document.createElement('div')\n        userInputContainer.classList.add('user-input-container')\n\n        userInputElements.forEach(input => {\n            const textElement = new MainUserInputContainer(input.type, input.placeHolder, input.name, input.iconType).mainInputContainer\n            userInputContainer.appendChild(textElement)\n        })\n\n        const loginButton = new Button('Sign in', 'login').button\n        const registerText = new RegisterIndicator('Don\\'t have account? ').registerIndicator\n\n        userInputContainer.appendChild(loginButton)\n        userInputContainer.appendChild(registerText)\n\n        this._loginContainer.appendChild(userInputContainer)\n    }\n\n    get login(){\n        return this._loginContainer\n    }\n}\n","export const countries : string[] = [\n    'Country', 'Algeria', 'Bahrain', 'Comoros', 'Djibouti', 'Egypt', 'Iraq',\n    'Jordan', 'Kuwait', 'Lebanon', 'Libya', 'Mauritania', 'Morocco',\n    'Oman', 'Qatar', 'Saudi Arabia', 'Somalia', 'Sudan', 'Syria',\n    'Tunisia', 'United Arab Emirates', 'Yemen'\n]\n","import { mainInputProperties } from '../interfaces/register-data-interface'\nimport {\n    checkEmail,\n    checkPasswords,\n    validName,\n} from '../utilities/signupUtils'\nimport { icons,placeHolders } from './enums'\n\nexport const userInputElements : mainInputProperties[] = [\n    {label: icons.user, name: 'firstName', placeHolder: placeHolders.firstName, type: 'text', validation: validName},\n    {label: icons.user, name: 'lastName', placeHolder: placeHolders.lastName, type: 'text', validation: validName},\n    {label: icons.email, name: 'email', placeHolder: placeHolders.email, type: 'email', validation: checkEmail},\n    {label: icons.password, name: 'password', placeHolder: placeHolders.password,type: 'password'},\n    {label: icons.password, name: 'password2', placeHolder: placeHolders.password2, type: 'password', validation: checkPasswords},\n]\n","export class Option{\n    private _option: HTMLOptionElement\n    constructor(private value: string = ''){\n        this._option = document.createElement('option')\n        this._option.classList.add('country-option')\n        this._option.textContent = this.value\n        this._option.value = this.value\n    }\n\n    get option(){\n        return this._option\n    }\n}","import { Label } from '../atoms/Label'\nimport { Option } from '../atoms/Option'\n\nexport class Select{\n    private _select : HTMLSelectElement\n    private _selectContainer : HTMLDivElement\n    constructor(private options: string[]){\n        this._selectContainer = document.createElement('div')\n        this._select = document.createElement('select')\n        const iconContainer = document.createElement('span')\n        iconContainer.classList.add('label-wrapper')\n        this._selectContainer.classList.add('select-container')\n        this._select.classList.add('select')\n        this._select.name = 'countries'\n        const selectLabel = new Label('fa-solid fa-globe').label\n        iconContainer.appendChild(selectLabel)\n        this.options.forEach(country => {\n            const countryOption = new Option(country).option\n            this._select.appendChild(countryOption)\n        })\n\n        this._selectContainer.appendChild(iconContainer)\n        this._selectContainer.appendChild(this._select)\n    }\n\n    get select(){\n        return this._selectContainer\n    }\n}\n","import { countries } from \"../../constants/countries\"\nimport { formTitle } from \"../../constants/enums\"\nimport { userInputElements } from \"../../constants/registration-data\"\nimport { mainInputProperties } from \"../../interfaces/register-data-interface\"\nimport { Button } from \"../atoms/Button\"\nimport { PrevPageLink } from \"../atoms/PrevPageLink\"\nimport { Title } from \"../atoms/Title\"\nimport { Select } from \"../molecules/Select\"\nimport { MainUserInputContainer } from '../molecules/MainUserInputContainer'\n\n\nexport class RegisterContainer{\n    private _registerContainer : HTMLDivElement\n    constructor(){\n        this._registerContainer = document.createElement('div')\n        this._registerContainer.classList.add('register-container')\n        this._registerContainer.classList.add('hide-container')\n\n        const {title} = new Title(formTitle.signup)\n        this._registerContainer.appendChild(title)\n\n        userInputElements.forEach((input: mainInputProperties) => {\n            let textElement\n            if(input.validation){\n                textElement = new MainUserInputContainer(input.type, input.placeHolder, input.name, input.label, input.validation).mainInputContainer\n            } else {\n                textElement = new MainUserInputContainer(input.type, input.placeHolder, input.name, input.label).mainInputContainer\n            }\n            this._registerContainer.appendChild(textElement)\n        })\n\n        const country = new Select(countries).select\n        this._registerContainer.appendChild(country)\n\n        const registerButton = new Button('Register', 'signup').button\n        this._registerContainer.appendChild(registerButton)\n\n        const backToLogin = new PrevPageLink('signup').loginText\n        this._registerContainer.appendChild(backToLogin)\n    }\n\n    get register(){\n        return this._registerContainer\n    }\n}\n","import { Background } from \"../atoms/Background\"\nimport { Image } from \"../atoms/Image\"\nimport { LoginContainer } from \"../organisms/LoginContainer\"\nimport { RegisterContainer } from \"../organisms/RegisterContainer\"\n\nexport class SignInUpTemplate{\n    private _container : HTMLDivElement\n    constructor(){\n        this._container = document.createElement('div')\n        this._container.classList.add('main-container')\n\n        const displayedContainer = document.createElement('div')\n        displayedContainer.classList.add('displayed-container')\n\n        const mainImage = new Image().image\n\n        const registration = new RegisterContainer().register\n        const userLogin = new LoginContainer().login\n        const {background} = new Background()\n\n        displayedContainer.appendChild(mainImage)\n        displayedContainer.appendChild(userLogin)\n        displayedContainer.appendChild(registration)\n        this._container.appendChild(background)\n        this._container.appendChild(displayedContainer)\n    }\n\n    get mainContainer(){\n        return this._container\n    }\n}\n","import { SignInUpTemplate } from '../templates/SigninUpTemplate'\n\nwindow.addEventListener('DOMContentLoaded', (_event: Event) => {\n    const {mainContainer} = new SignInUpTemplate()\n    document.body.appendChild(mainContainer)\n})\n"],"names":["Background","constructor","this","_backgroundImage","document","createElement","src","classList","add","background","Image","_image","image","formTitle","backLinkText","placeHolders","icons","validationError","userInputElements","iconType","user","name","placeHolder","email","type","password","LocalStorage","getStorage","window","localStorage","_storage","get","key","getItem","set","value","setItem","removeItem","removeItems","keys","forEach","validName","currTextInfo","parentNode","childNodes","Boolean","match","textContent","checkEmail","currLocalStorage","usedEmail","invalidEmail","checkPasswords","password1","password2","errorText","push","notMatching","length","shortPass","noNumbers","join","Button","text","container","_button","addEventListener","currEmail","querySelector","currPass","userEmail","userInfo","JSON","parse","pass","remove","checkLoginInput","fNameHasNumbers","lNameHasNumbers","enteredEmail","querySelectorAll","firstPassword","secondPassword","tempObj","userInfoArray","stringify","nextContent","currContentElements","nextContentElements","toggle","switchContent","checkRegistrationInput","button","Title","_title","title","PrevPageLink","event","currForm","_requiredPage","currContent","closest","_backLink","login","setTimeout","loginText","RegisterText","_registerText","registerText","RegisterIndicator","_registerTextContainer","registerLink","appendChild","registerIndicator","ValidationText","_text","Label","labelClass","_label","split","currClass","label","TextField","actionFunction","_textField","placeholder","currEvent","textField","TextInfo","labelName","_textInfo","labelWrapper","MainUserInputContainer","_mainInputContainer","inputField","mainInputContainer","LoginContainer","_loginContainer","userInputContainer","input","textElement","loginButton","countries","firstName","validation","lastName","Option","_option","option","Select","options","_selectContainer","_select","iconContainer","selectLabel","country","countryOption","select","RegisterContainer","_registerContainer","signup","registerButton","backToLogin","register","SignInUpTemplate","_container","displayedContainer","mainImage","registration","userLogin","mainContainer","_event","body"],"sourceRoot":""}