[{"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/App.tsx":"1","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/countries.ts":"2","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/displayed-text.ts":"3","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/login-data.ts":"4","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/registration-data.ts":"5","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Hooks/useForm.tsx":"6","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/local-storage-interface.ts":"7","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/login-data-interface.ts":"8","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/register-data-interface.ts":"9","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/LocalStorage.ts":"10","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/Regex.ts":"11","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/loginUtils.ts":"12","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/main.tsx":"13","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/vite-env.d.ts":"14","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/vite.config.ts":"15","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Background/Background.tsx":"16","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Button/Button.tsx":"17","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Image/Image.tsx":"18","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Label/Label.tsx":"19","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Option/Option.tsx":"20","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/PrevPageLink/PrevPageLink.tsx":"21","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/RegisterText/RegisterText.tsx":"22","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/TextField/TextField.tsx":"23","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Title/Title.tsx":"24","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/ValidationText/ValidationText.tsx":"25","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/MainUserInputContainer/MainUserInputContainer.tsx":"26","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/RegisterIndicator/RegisterIndicator.tsx":"27","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/Select/Select.tsx":"28","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/TextInfo/TextInfo.tsx":"29","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Organisms/LoginContainer/LoginContainer.tsx":"30","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Organisms/RegisterContainer/RegisterContainer.tsx":"31","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Pages/main-page/MainPage.tsx":"32","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Templates/SigninUpTemplate/SigninUpTemplate.tsx":"33","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Enums/enums.ts":"34","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/atom-interfaces.ts":"35","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/molecule-interfaces.ts":"36","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/organisms-interfaces.ts":"37","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/validate-input.ts":"38"},{"size":157,"mtime":1669544132829,"results":"39","hashOfConfig":"40"},{"size":371,"mtime":1669532509692,"results":"41","hashOfConfig":"40"},{"size":1098,"mtime":1669532755330,"results":"42","hashOfConfig":"40"},{"size":471,"mtime":1669532509692,"results":"43","hashOfConfig":"40"},{"size":875,"mtime":1669532509692,"results":"44","hashOfConfig":"40"},{"size":1551,"mtime":1669632944394,"results":"45","hashOfConfig":"46"},{"size":161,"mtime":1668396191588,"results":"47","hashOfConfig":"40"},{"size":175,"mtime":1669532435866,"results":"48","hashOfConfig":"40"},{"size":196,"mtime":1669471589436,"results":"49","hashOfConfig":"40"},{"size":791,"mtime":1669548824997,"results":"50","hashOfConfig":"40"},{"size":261,"mtime":1669532509692,"results":"51","hashOfConfig":"40"},{"size":814,"mtime":1669632862914,"results":"52","hashOfConfig":"40"},{"size":211,"mtime":1669633046173,"results":"53","hashOfConfig":"40"},{"size":38,"mtime":1669082672472,"results":"54","hashOfConfig":"40"},{"size":659,"mtime":1669632691667,"results":"55","hashOfConfig":"40"},{"size":244,"mtime":1669632129212,"results":"56","hashOfConfig":"40"},{"size":273,"mtime":1669546646388,"results":"57","hashOfConfig":"40"},{"size":181,"mtime":1669632129212,"results":"58","hashOfConfig":"40"},{"size":203,"mtime":1669632129212,"results":"59","hashOfConfig":"40"},{"size":248,"mtime":1669532509692,"results":"60","hashOfConfig":"40"},{"size":325,"mtime":1669632129212,"results":"61","hashOfConfig":"40"},{"size":190,"mtime":1669532509692,"results":"62","hashOfConfig":"40"},{"size":378,"mtime":1669632129212,"results":"63","hashOfConfig":"40"},{"size":162,"mtime":1669532509692,"results":"64","hashOfConfig":"40"},{"size":268,"mtime":1669532509692,"results":"65","hashOfConfig":"40"},{"size":785,"mtime":1669632129212,"results":"66","hashOfConfig":"40"},{"size":656,"mtime":1669632129212,"results":"67","hashOfConfig":"40"},{"size":652,"mtime":1669632129212,"results":"68","hashOfConfig":"40"},{"size":674,"mtime":1669632129212,"results":"69","hashOfConfig":"40"},{"size":3444,"mtime":1669632944394,"results":"70","hashOfConfig":"46"},{"size":1981,"mtime":1669632129212,"results":"71","hashOfConfig":"40"},{"size":210,"mtime":1669544565223,"results":"72","hashOfConfig":"40"},{"size":1125,"mtime":1669632944394,"results":"73","hashOfConfig":"46"},{"size":157,"mtime":1669532311748,"results":"74","hashOfConfig":"40"},{"size":870,"mtime":1669546693712,"results":"75","hashOfConfig":"40"},{"size":750,"mtime":1669547676796,"results":"76","hashOfConfig":"40"},{"size":296,"mtime":1669632129212,"results":"77","hashOfConfig":"40"},{"size":1937,"mtime":1669632129212,"results":"78","hashOfConfig":"40"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w8usjm",{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"97"},"13w6tkq",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/App.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/countries.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/displayed-text.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/login-data.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Constants/registration-data.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Hooks/useForm.tsx",["196"],[],"import { useState } from \"react\"\nimport { LocalStorage } from \"@Utilities/LocalStorage\"\nimport { validateInput } from \"@Utilities/validate-input\"\n\ninterface objectStringKey {\n    [key: string]: string;\n}\n\ninterface returnedValue {\n    errors: { [key: string]: string };\n    valid: boolean;\n}\n\nexport const useForm = (\n    validate: (passedValues: objectStringKey) => returnedValue,\n    switchContent: (value: string) => void\n) => {\n    const [values, setValues] = useState<objectStringKey>({\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        password: \"\",\n        password2: \"\",\n    })\n    const [errors, setErrors] = useState<objectStringKey>({})\n\n    const localStorage = new LocalStorage()\n\n    const handleChange = (event: InputEvent) => {\n        event.preventDefault()\n        const { name, value } = event.target as HTMLInputElement\n\n        setValues({\n            ...values,\n            [name]: value,\n        })\n        setErrors({\n            ...errors,\n            [name]: validateInput(value, name, values.password),\n        })\n    }\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const { errors, valid } = validate(values)\n        setErrors(errors)\n\n        if (valid) {\n            const userInfo = { e: values.email, pass: values.password }\n            localStorage.addUser(values.email, userInfo)\n            switchContent(\"login\")\n        }\n    }\n\n    return {\n        errors,\n        handleChange,\n        handleSubmit,\n        values,\n    }\n}\n","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/local-storage-interface.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/login-data-interface.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/register-data-interface.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/LocalStorage.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/Regex.ts",["197","198","199","200"],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/loginUtils.ts",["201"],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/main.tsx",["202"],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/vite-env.d.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/vite.config.ts",["203"],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Background/Background.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Button/Button.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Image/Image.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Label/Label.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Option/Option.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/PrevPageLink/PrevPageLink.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/RegisterText/RegisterText.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/TextField/TextField.tsx",["204"],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/Title/Title.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Atoms/ValidationText/ValidationText.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/MainUserInputContainer/MainUserInputContainer.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/RegisterIndicator/RegisterIndicator.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/Select/Select.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Molecules/TextInfo/TextInfo.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Organisms/LoginContainer/LoginContainer.tsx",["205","206","207","208"],[],"import { Button } from \"@Components/Atoms/Button/Button\"\nimport { Title } from \"@Components/Atoms/Title/Title\"\nimport { MainUserInputContainer } from \"@Components/Molecules/MainUserInputContainer/MainUserInputContainer\"\nimport { RegisterIndicator } from \"@Components/Molecules/RegisterIndicator/RegisterIndicator\"\nimport { formTitle } from \"@Constants/displayed-text\"\nimport { userInputElements } from \"@Constants/login-data\"\nimport { buttonType } from \"@Enums/enums\"\nimport {\n    // loginContainerProps,\n    objectStringKey,\n} from \"@Interfaces/organisms-interfaces\"\nimport { checkLoginInput } from \"@Utilities/loginUtils\"\nimport { useCallback, useMemo, useState } from \"react\"\n// LoginForm instead of LoginContainer\n// interface in the same place\n// LoginFormProps\ninterface loginContainerProps {\n    switchContent: (value: string) => void;\n}\n\nexport const LoginContainer = ({switchContent}: loginContainerProps) => {\n    const [inputData, setInputData] = useState<objectStringKey>({ // name\n        email: \"\",\n        password: \"\",\n    })\n    const [errorMessage, setErrorMessage] = useState<string>(\"\")\n    const [validUser, setValidUser] = useState<boolean>(false)\n    const [messageColor, setMessageColor] = useState<string>(\"#FF0000\")\n\n    // To not reinitialize\n    const { email, password } = useMemo<objectStringKey>(() => inputData, [inputData])\n\n    // handleOnChange\n    const changeHandler = useCallback((event: InputEvent): void => {\n            const { name, value } = event.target as HTMLInputElement\n            setInputData({ ...inputData, [name]: value })\n        },[setInputData]\n    )\n\n    // handleSubmit\n    const submitHandler = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault()\n        const { message, valid } = checkLoginInput(email, password)\n        setErrorMessage(message)\n\n        if (valid) {\n            setMessageColor(\"#00FF00\") //Enum - RGB\n            setValidUser(valid)\n        }\n    }\n\n    return (\n        <form autoComplete=\"on\" className=\"login-container\" onSubmit={submitHandler}>\n            <Title text={formTitle.login} />\n            <div className=\"user-input-container\">\n                {userInputElements.map((input, index) => {\n                    return (\n                        <MainUserInputContainer\n                            actionFunction={changeHandler} //handleOnChange\n                            error= {input.name === \"password\" ? errorMessage:''}\n                            key={`input-${index}`}\n                            labelName={input.iconType}\n                            name={input.name}\n                            placeHolder={input.placeHolder}\n                            value={inputData[input.name]}\n                            // {...(input.name === \"password\" && {\n                            //     error: errorMessage,\n                            // })}\n                            type={input.type}\n                            {...(input.name === \"password\" &&\n                                validUser && {\n                                    messageColor,\n                            })}\n                        />\n                    )\n                })}\n            </div>\n            <Button text={buttonType.login} type=\"login\" />\n            <RegisterIndicator\n                switchForm={switchContent}\n                text=\"Don't have an account? \" // In strings folder\n            />\n        </form>\n    )\n}\n","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Organisms/RegisterContainer/RegisterContainer.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Pages/main-page/MainPage.tsx",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Components/Templates/SigninUpTemplate/SigninUpTemplate.tsx",["209"],[],"import { Background } from \"@Components/Atoms/Background/Background\"\nimport { Image } from \"@Components/Atoms/Image/Image\"\nimport { LoginContainer } from \"@Components/Organisms/LoginContainer/LoginContainer\"\nimport { RegisterContainer } from \"@Components/Organisms/RegisterContainer/RegisterContainer\"\nimport { useState } from \"react\"\n\nexport const SignInUpTemplate = () => {\n    //Use enum for login and signUp\n    const [currForm, setCurrForm] = useState(\"login\")\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"displayed-container\">\n                <Image />\n                {currForm === \"login\" ? (\n                    <LoginContainer\n                        switchContent={(currForm) => setCurrForm(currForm)} // No need to send a var for the function\n                    />\n                ) : (\n                    <RegisterContainer\n                        switchContent={(currForm: string) =>\n                            setCurrForm(currForm)\n                        }\n                    />\n                )}\n            </div>\n            <Background />\n        </div>\n    )\n}\n","/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Enums/enums.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/atom-interfaces.ts",["210"],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/molecule-interfaces.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Interfaces/organisms-interfaces.ts",[],[],"/home/dawood/Desktop/Beauty Tasks/Beauty-Tasks/src/Utilities/validate-input.ts",[],[],{"ruleId":"211","severity":2,"message":"212","line":1,"column":1,"nodeType":"213","endLine":1,"endColumn":33,"fix":"214"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":27,"nodeType":"217","messageId":"218","endLine":2,"endColumn":28,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"216","line":2,"column":43,"nodeType":"217","messageId":"218","endLine":2,"endColumn":44,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"221","line":4,"column":42,"nodeType":"217","messageId":"218","endLine":4,"endColumn":43,"suggestions":"222"},{"ruleId":"215","severity":1,"message":"223","line":4,"column":59,"nodeType":"217","messageId":"218","endLine":4,"endColumn":60,"suggestions":"224"},{"ruleId":"225","severity":2,"message":"226","line":20,"column":15,"nodeType":"227","messageId":"228","endLine":20,"endColumn":98},{"ruleId":"229","severity":1,"message":"230","line":6,"column":21,"nodeType":"231","messageId":"232","endLine":6,"endColumn":53},{"ruleId":null,"fatal":true,"severity":2,"message":"233"},{"ruleId":"225","severity":2,"message":"226","line":8,"column":23,"nodeType":"234","messageId":"228","endLine":8,"endColumn":43},{"ruleId":"235","severity":2,"message":"236","line":1,"column":1,"nodeType":null,"messageId":"237","endLine":13,"endColumn":55,"fix":"238"},{"ruleId":"239","severity":2,"message":"240","line":17,"column":1,"nodeType":"241","messageId":"242","endLine":19,"endColumn":2,"fix":"243"},{"ruleId":"244","severity":2,"message":"245","line":37,"column":11,"nodeType":"246","endLine":37,"endColumn":25,"suggestions":"247"},{"ruleId":"248","severity":2,"message":"249","line":69,"column":29,"nodeType":"250","messageId":"251","endLine":69,"endColumn":33,"fix":"252"},{"ruleId":"235","severity":2,"message":"236","line":1,"column":1,"nodeType":null,"messageId":"237","endLine":5,"endColumn":33,"fix":"253"},{"ruleId":"254","severity":1,"message":"255","line":31,"column":21,"nodeType":"256","messageId":"257","endLine":31,"endColumn":24,"suggestions":"258"},"import-helpers/order-imports","`react` import should occur after import of `@Utilities/validate-input`","ImportDeclaration",{"range":"259","text":"260"},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["261","262"],["263","264"],"Unnecessary escape character: \\[.",["265","266"],"Unnecessary escape character: \\/.",["267","268"],"@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an `any` value.","VariableDeclarator","anyAssignment","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","Parsing error: ESLint was configured to run on `<tsconfigRootDir>/vite.config.ts` using `parserOptions.project`: <tsconfigRootDir>/tsconfig.json\nHowever, that TSConfig does not include this file. Either:\n- Change ESLint's list of included files to not include this file\n- Change that TSConfig to include this file\n- Create a new TSConfig that includes this file and include it in your parserOptions.project\nSee the TypeScript ESLint docs for more info: https://typescript-eslint.io/docs/linting/troubleshooting##i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file","MemberExpression","simple-import-sort/imports","Run autofix to sort these imports!","sort",{"range":"269","text":"270"},"@typescript-eslint/padding-line-between-statements","Expected blank line before this statement.","TSInterfaceDeclaration","expectedBlankLine",{"range":"271","text":"272"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'inputData'. Either include it or remove the dependency array. You can also do a functional update 'setInputData(i => ...)' if you only need 'inputData' in the 'setInputData' call.","ArrayExpression",["273"],"react/jsx-sort-props","Props should be sorted alphabetically","JSXIdentifier","sortPropsByAlpha",{"range":"274","text":"275"},{"range":"276","text":"277"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["278","279"],[0,146],"import { LocalStorage } from \"@Utilities/LocalStorage\"\nimport { validateInput } from \"@Utilities/validate-input\"\nimport { useState } from \"react\"\n",{"messageId":"280","fix":"281","desc":"282"},{"messageId":"283","fix":"284","desc":"285"},{"messageId":"280","fix":"286","desc":"282"},{"messageId":"283","fix":"287","desc":"285"},{"messageId":"280","fix":"288","desc":"282"},{"messageId":"283","fix":"289","desc":"285"},{"messageId":"280","fix":"290","desc":"282"},{"messageId":"283","fix":"291","desc":"285"},[0,678],"import { useCallback, useMemo, useState } from \"react\"\nimport { Button } from \"@Components/Atoms/Button/Button\"\nimport { Title } from \"@Components/Atoms/Title/Title\"\nimport { MainUserInputContainer } from \"@Components/Molecules/MainUserInputContainer/MainUserInputContainer\"\nimport { RegisterIndicator } from \"@Components/Molecules/RegisterIndicator/RegisterIndicator\"\nimport { formTitle } from \"@Constants/displayed-text\"\nimport { userInputElements } from \"@Constants/login-data\"\nimport { buttonType } from \"@Enums/enums\"\nimport {\n    // loginContainerProps,\n    objectStringKey,\n} from \"@Interfaces/organisms-interfaces\"\nimport { checkLoginInput } from \"@Utilities/loginUtils\"",[678,678],"\n",{"desc":"292","fix":"293"},[2321,2923],"actionFunction={changeHandler} //handleOnChange\n                            error= {input.name === \"password\" ? errorMessage:''}\n                            key={`input-${index}`}\n                            labelName={input.iconType}\n                            name={input.name}\n                            placeHolder={input.placeHolder}\n                            value={inputData[input.name]}\n                            // {...(input.name === \"password\" && {\n                            //     error: errorMessage,\n                            // })}\n                            type={input.type}",[0,334],"import { useState } from \"react\"\nimport { Background } from \"@Components/Atoms/Background/Background\"\nimport { Image } from \"@Components/Atoms/Image/Image\"\nimport { LoginContainer } from \"@Components/Organisms/LoginContainer/LoginContainer\"\nimport { RegisterContainer } from \"@Components/Organisms/RegisterContainer/RegisterContainer\"",{"messageId":"294","fix":"295","desc":"296"},{"messageId":"297","fix":"298","desc":"299"},"removeEscape",{"range":"300","text":"301"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"302","text":"303"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"304","text":"301"},{"range":"305","text":"303"},{"range":"306","text":"301"},{"range":"307","text":"303"},{"range":"308","text":"301"},{"range":"309","text":"303"},"Update the dependencies array to be: [inputData]",{"range":"310","text":"311"},"suggestUnknown",{"range":"312","text":"313"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"312","text":"314"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[50,51],"",[50,50],"\\",[66,67],[66,66],[168,169],[168,168],[185,186],[185,185],[1586,1600],"[inputData]",[548,551],"unknown","never"]